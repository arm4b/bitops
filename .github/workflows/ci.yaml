name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  # Run black linting
  # https://github.com/psf/black
  lint-black:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: 'pip'

      - name: Cache Python Dependencies and Env
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            .tox
          key: ${{ runner.os }}-v1-python-3.8-black-${{ hashFiles('test-requirements.txt', 'pyproject.toml', 'tox.ini') }}

      - name: Install Python test dependencies
        run: python -m pip install tox

      - name: Run black formatting
        run: |
          echo "::add-matcher::.github/matchers/black.json"
          tox -e black

  # Run pylint static code analysis
  # https://www.pylint.org/
  lint-pylint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: 'pip'

      - name: Cache Python Dependencies and Env
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            .tox
          key: ${{ runner.os }}-v1-python-3.8-pylint-${{ hashFiles('requirements.txt', 'test-requirements.txt', 'tox.ini') }}

      - name: Install Python test dependencies
        run: python -m pip install tox

      - name: Run pylint
        run: |
          echo "::add-matcher::.github/matchers/pylint.json"
          tox -e pylint

  # Run python unit tests
  # https://docs.python.org/3/library/unittest.html
  tests-unit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: 'pip'

      - name: Cache Python Dependencies and Env
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            .tox
          key: ${{ runner.os }}-v1-python-3.8-pylint-${{ hashFiles('requirements.txt', 'test-requirements.txt', 'tox.ini') }}

      - name: Install Python test dependencies
        run: python -m pip install tox

      - name: Run unit tests
        run: |
          tox -e unit

  # Build and Push the base Docker image with no plugins
  build-push-base-image:
    runs-on: ubuntu-latest
    # needs:
    #   - lint-black
    #   - lint-pylint
    #   - tests-unit

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build base Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: armabit/bitops:dev-base

      - name: Push base Docker image
        uses: docker/build-push-action@v4
        if: ${{ github.ref_name == 'main' }}
        with:
          context: .
          tags: armabit/bitops:dev-base
          push: true

      - name: List Docker images
        run: docker images
