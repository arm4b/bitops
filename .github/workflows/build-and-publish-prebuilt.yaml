name: Build and Publish preconfigured images

on:
  workflow_dispatch: 
    inputs:
      image_tag:
        description: Specifies the tag that will be published
        type: string
        default: base
        required: true
  push:
    branches: ["main"]
    tags:
      - "*"

jobs:
  # Separated workflow, as 'bitops-tags.yaml' values could be overwriten
  build-publish-dev:
    name: Build and publish 'dev' omnibus Docker image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - uses: cuchi/jinja2-action@v1.2.0
      with:
        template: prebuilt-config/dockerfile.template
        output_file: ./Dockerfile
        variables: tags="" # uses jinja default from the dockerfile.template
    - name: Copy bitops.config.yaml into the project root folder
      run: cp ./prebuilt-config/omnibus/bitops.config.yaml ./bitops.config.yaml
    - name: Publish Omnibus dev Docker Image (Push)
      env:
        REGISTRY_URL: "bitovi/bitops"
        DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME}}
        DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD}}
        # on 'main' branch build 'omnibus' image and publish it as 'dev' Docker tag
        IMAGE_TAG: dev
      run: |
        echo "running scripts/ci/publish.sh"
        ./scripts/ci/publish.sh

  build-publish-prebuilds:
    name: Publish image for ${{ matrix.target }}
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        target:
          - aws-ansible
          - aws-helm
          - aws-terraform
          - omnibus

    steps:
    - uses: actions/checkout@v2
  
    # ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~- #
    #           Workflow dispatch              #
    # ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~- # 
    # Loads VERSION_TAG from inputs
    - name: Update VERSION_TAG with input (workflow_dispatch)
      run: |
        echo "VERSION_TAG=${{ github.event.inputs.image_tag}}" >> $GITHUB_ENV
        sed -i "s/bitops_base:.*/bitops_base: ${{ github.event.inputs.image_tag}}-base/" ./prebuilt-config/bitops-tag.yaml

    - uses: cuchi/jinja2-action@v1.2.0
      with:
        template: prebuilt-config/dockerfile.template
        output_file: prebuilt-config/${{ matrix.target }}/Dockerfile
        data_file: prebuilt-config/bitops-tag.yaml
        data_format: yaml

    # ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~- #
    #                   ALL                    #
    # ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~- # 
    # Move the dockerfile and bitops.config.yaml into the project root folder
    - name: Copy Dockerfile and bitops.config.yaml into the project root folder
      run: |
        cp ./prebuilt-config/${{ matrix.target }}/Dockerfile ./Dockerfile
        cp ./prebuilt-config/${{ matrix.target }}/bitops.config.yaml ./bitops.config.yaml

    - name: Publish Docker Image (Workflow Dispatch)
      env:
        REGISTRY_URL: "bitovi/bitops"
        DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME}}
        DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD}}
        # On a versioned release push '2.0.0-omnibus', '2.0.0-aws-ansible', etc Docker tags
        IMAGE_TAG: ${{ env.VERSION_TAG }}-${{ matrix.target }}
      run: |
        # Additionally tag versioned 'omnibus' as 'X.Y.Z' and 'latest' 
        if [[ "${{ matrix.target }}" == "omnibus" ]]; then
          export ADDITIONAL_IMAGE_TAGS="${{ env.VERSION_TAG }} latest"
        fi

        echo "running scripts/ci/publish.sh"
        ./scripts/ci/publish.sh
